// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExchangeWidget renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <I18n
    ns="translations"
  >
    [Function]
  </I18n>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <div
              className="widget"
            >
              <Connect(CoinInput)
                type="deposit"
              />
              <Connect(CoinSwitch) />
              <Connect(CoinInput)
                type="receive"
              />
              <Connect(WalletAddress)
                focusWalletAddress={[Function]}
                inputRef={[Function]}
                onSubmit={[Function]}
                withdraw_coin="receive"
              />
              <div
                className="submit"
              >
                <p
                  className="info"
                >
                  order.feeinfo
                </p>
                <button
                  className="btn disabled btn btn-block btn-primary proceed "
                  onClick={[Function]}
                >
                  exchangewidget.2
                </button>
                <p
                  className="infotc"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "order.byclickTC",
                    }
                  }
                />
              </div>
              <Integrations />
            </div>
          </div>
        </div>
      </div>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <div
              className="widget"
            >
              <Connect(CoinInput)
                type="deposit"
              />
              <Connect(CoinSwitch) />
              <Connect(CoinInput)
                type="receive"
              />
              <Connect(WalletAddress)
                focusWalletAddress={[Function]}
                inputRef={[Function]}
                onSubmit={[Function]}
                withdraw_coin="receive"
              />
              <div
                className="submit"
              >
                <p
                  className="info"
                >
                  order.feeinfo
                </p>
                <button
                  className="btn disabled btn btn-block btn-primary proceed "
                  onClick={[Function]}
                >
                  exchangewidget.2
                </button>
                <p
                  className="infotc"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "order.byclickTC",
                    }
                  }
                />
              </div>
              <Integrations />
            </div>
          </div>
        </div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col-xs-12"
          >
            <div
              className="widget"
            >
              <Connect(CoinInput)
                type="deposit"
              />
              <Connect(CoinSwitch) />
              <Connect(CoinInput)
                type="receive"
              />
              <Connect(WalletAddress)
                focusWalletAddress={[Function]}
                inputRef={[Function]}
                onSubmit={[Function]}
                withdraw_coin="receive"
              />
              <div
                className="submit"
              >
                <p
                  className="info"
                >
                  order.feeinfo
                </p>
                <button
                  className="btn disabled btn btn-block btn-primary proceed "
                  onClick={[Function]}
                >
                  exchangewidget.2
                </button>
                <p
                  className="infotc"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "order.byclickTC",
                    }
                  }
                />
              </div>
              <Integrations />
            </div>
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="widget"
            >
              <Connect(CoinInput)
                type="deposit"
              />
              <Connect(CoinSwitch) />
              <Connect(CoinInput)
                type="receive"
              />
              <Connect(WalletAddress)
                focusWalletAddress={[Function]}
                inputRef={[Function]}
                onSubmit={[Function]}
                withdraw_coin="receive"
              />
              <div
                className="submit"
              >
                <p
                  className="info"
                >
                  order.feeinfo
                </p>
                <button
                  className="btn disabled btn btn-block btn-primary proceed "
                  onClick={[Function]}
                >
                  exchangewidget.2
                </button>
                <p
                  className="infotc"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "order.byclickTC",
                    }
                  }
                />
              </div>
              <Integrations />
            </div>,
            "className": "col-xs-12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Connect(CoinInput)
                  type="deposit"
                />,
                <Connect(CoinSwitch) />,
                <Connect(CoinInput)
                  type="receive"
                />,
                <Connect(WalletAddress)
                  focusWalletAddress={[Function]}
                  inputRef={[Function]}
                  onSubmit={[Function]}
                  withdraw_coin="receive"
                />,
                null,
                null,
                null,
                <div
                  className="submit"
                >
                  <p
                    className="info"
                  >
                    order.feeinfo
                  </p>
                  <button
                    className="btn disabled btn btn-block btn-primary proceed "
                    onClick={[Function]}
                  >
                    exchangewidget.2
                  </button>
                  <p
                    className="infotc"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "order.byclickTC",
                      }
                    }
                  />
                </div>,
                <Integrations />,
              ],
              "className": "widget",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onSubmit": undefined,
                  "type": "deposit",
                  "walletInput": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onSubmit": undefined,
                  "type": "receive",
                  "walletInput": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "button": undefined,
                  "focusWalletAddress": [Function],
                  "inputRef": [Function],
                  "onSubmit": [Function],
                  "withdraw_coin": "receive",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              null,
              null,
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="info"
                    >
                      order.feeinfo
                    </p>,
                    <button
                      className="btn disabled btn btn-block btn-primary proceed "
                      onClick={[Function]}
                    >
                      exchangewidget.2
                    </button>,
                    <p
                      className="infotc"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "order.byclickTC",
                        }
                      }
                    />,
                  ],
                  "className": "submit",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "order.feeinfo",
                      "className": "info",
                    },
                    "ref": null,
                    "rendered": "order.feeinfo",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "exchangewidget.2",
                        null,
                      ],
                      "className": "btn disabled btn btn-block btn-primary proceed ",
                      "onClick": [Function],
                    },
                    "ref": [Function],
                    "rendered": Array [
                      "exchangewidget.2",
                      null,
                    ],
                    "type": "button",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "infotc",
                      "dangerouslySetInnerHTML": Object {
                        "__html": "order.byclickTC",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "p",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <div
            className="row"
          >
            <div
              className="col-xs-12"
            >
              <div
                className="widget"
              >
                <Connect(CoinInput)
                  type="deposit"
                />
                <Connect(CoinSwitch) />
                <Connect(CoinInput)
                  type="receive"
                />
                <Connect(WalletAddress)
                  focusWalletAddress={[Function]}
                  inputRef={[Function]}
                  onSubmit={[Function]}
                  withdraw_coin="receive"
                />
                <div
                  className="submit"
                >
                  <p
                    className="info"
                  >
                    order.feeinfo
                  </p>
                  <button
                    className="btn disabled btn btn-block btn-primary proceed "
                    onClick={[Function]}
                  >
                    exchangewidget.2
                  </button>
                  <p
                    className="infotc"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "order.byclickTC",
                      }
                    }
                  />
                </div>
                <Integrations />
              </div>
            </div>
          </div>
        </div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row"
          >
            <div
              className="col-xs-12"
            >
              <div
                className="widget"
              >
                <Connect(CoinInput)
                  type="deposit"
                />
                <Connect(CoinSwitch) />
                <Connect(CoinInput)
                  type="receive"
                />
                <Connect(WalletAddress)
                  focusWalletAddress={[Function]}
                  inputRef={[Function]}
                  onSubmit={[Function]}
                  withdraw_coin="receive"
                />
                <div
                  className="submit"
                >
                  <p
                    className="info"
                  >
                    order.feeinfo
                  </p>
                  <button
                    className="btn disabled btn btn-block btn-primary proceed "
                    onClick={[Function]}
                  >
                    exchangewidget.2
                  </button>
                  <p
                    className="infotc"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "order.byclickTC",
                      }
                    }
                  />
                </div>
                <Integrations />
              </div>
            </div>
          </div>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-xs-12"
            >
              <div
                className="widget"
              >
                <Connect(CoinInput)
                  type="deposit"
                />
                <Connect(CoinSwitch) />
                <Connect(CoinInput)
                  type="receive"
                />
                <Connect(WalletAddress)
                  focusWalletAddress={[Function]}
                  inputRef={[Function]}
                  onSubmit={[Function]}
                  withdraw_coin="receive"
                />
                <div
                  className="submit"
                >
                  <p
                    className="info"
                  >
                    order.feeinfo
                  </p>
                  <button
                    className="btn disabled btn btn-block btn-primary proceed "
                    onClick={[Function]}
                  >
                    exchangewidget.2
                  </button>
                  <p
                    className="infotc"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "order.byclickTC",
                      }
                    }
                  />
                </div>
                <Integrations />
              </div>
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="widget"
              >
                <Connect(CoinInput)
                  type="deposit"
                />
                <Connect(CoinSwitch) />
                <Connect(CoinInput)
                  type="receive"
                />
                <Connect(WalletAddress)
                  focusWalletAddress={[Function]}
                  inputRef={[Function]}
                  onSubmit={[Function]}
                  withdraw_coin="receive"
                />
                <div
                  className="submit"
                >
                  <p
                    className="info"
                  >
                    order.feeinfo
                  </p>
                  <button
                    className="btn disabled btn btn-block btn-primary proceed "
                    onClick={[Function]}
                  >
                    exchangewidget.2
                  </button>
                  <p
                    className="infotc"
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "order.byclickTC",
                      }
                    }
                  />
                </div>
                <Integrations />
              </div>,
              "className": "col-xs-12",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Connect(CoinInput)
                    type="deposit"
                  />,
                  <Connect(CoinSwitch) />,
                  <Connect(CoinInput)
                    type="receive"
                  />,
                  <Connect(WalletAddress)
                    focusWalletAddress={[Function]}
                    inputRef={[Function]}
                    onSubmit={[Function]}
                    withdraw_coin="receive"
                  />,
                  null,
                  null,
                  null,
                  <div
                    className="submit"
                  >
                    <p
                      className="info"
                    >
                      order.feeinfo
                    </p>
                    <button
                      className="btn disabled btn btn-block btn-primary proceed "
                      onClick={[Function]}
                    >
                      exchangewidget.2
                    </button>
                    <p
                      className="infotc"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "order.byclickTC",
                        }
                      }
                    />
                  </div>,
                  <Integrations />,
                ],
                "className": "widget",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onSubmit": undefined,
                    "type": "deposit",
                    "walletInput": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onSubmit": undefined,
                    "type": "receive",
                    "walletInput": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "button": undefined,
                    "focusWalletAddress": [Function],
                    "inputRef": [Function],
                    "onSubmit": [Function],
                    "withdraw_coin": "receive",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                null,
                null,
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="info"
                      >
                        order.feeinfo
                      </p>,
                      <button
                        className="btn disabled btn btn-block btn-primary proceed "
                        onClick={[Function]}
                      >
                        exchangewidget.2
                      </button>,
                      <p
                        className="infotc"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "order.byclickTC",
                          }
                        }
                      />,
                    ],
                    "className": "submit",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "order.feeinfo",
                        "className": "info",
                      },
                      "ref": null,
                      "rendered": "order.feeinfo",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "exchangewidget.2",
                          null,
                        ],
                        "className": "btn disabled btn btn-block btn-primary proceed ",
                        "onClick": [Function],
                      },
                      "ref": [Function],
                      "rendered": Array [
                        "exchangewidget.2",
                        null,
                      ],
                      "type": "button",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "infotc",
                        "dangerouslySetInnerHTML": Object {
                          "__html": "order.byclickTC",
                        },
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {
      "storeSubscription": undefined,
    },
    Symbol(enzyme.__providerValues__): Map {},
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
